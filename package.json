{
  "name": "project",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:generate": "npx prisma generate --schema ./src/infraestructure/database/prisma/schema.prisma",
    "prisma:migrate-dev": "npx prisma migrate dev --schema ./src/infraestructure/database/prisma/schema.prisma",
    "prisma:reset": "npx prisma migrate reset --schema ./src/infraestructure/database/prisma/schema.prisma",
    "prisma:studio": "npx prisma studio --schema ./src/infraestructure/database/prisma/schema.prisma",
    "prisma:deploy": "npx prisma migrate deploy --schema ./src/infraestructure/database/prisma/schema.prisma",
    "typeorm": "typeorm-ts-node-esm",
    "migration:generate": "npm run typeorm migration:generate ./src/infraestructure/database/typeorm/entities/ -d ./src/infraestructure/database/migrations/%migration-name%",
    "migration:create": "npm run typeorm migration:create ./src/infraestructure/database/typeorm/entities/NewMigration",
    "migration:run": "npm run typeorm migration:run -- -d ./src/infraestructure/database/typeorm/ormconfig.ts",
    "migration:revert": "npm run typeorm migration:revert -- -d ./src/infraestructure/database/typeorm/ormconfig.ts",
    "start:offline": "npm run build && serverless offline start --stage development",
    "deploy:dev": "npm run build && serverless deploy --stage development",
    "deploy:prod": "npm run build && serverless deploy --stage production",
    "remove:dev": "serverless remove --stage development",
    "remove:prod": "serverless remove --stage production"
  },
  "dependencies": {
    "@codegenie/serverless-express": "^4.16.0",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.3",
    "@nestjs/swagger": "^11.2.0",
    "aws-lambda": "^1.0.7",
    "axios": "^1.9.0",
    "bcrypt": "^6.0.0",
    "cache-manager": "^7.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^16.5.0",
    "ioredis": "^5.6.1",
    "joi": "^17.13.3",
    "mysql2": "^3.14.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/aws-lambda": "^8.10.149",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "copy-webpack-plugin": "^13.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "serverless-jetpack": "^0.11.2",
    "serverless-offline": "^14.4.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
