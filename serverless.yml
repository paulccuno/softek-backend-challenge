service: softek-backend-challenge

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  architecture: arm64
  stage: ${opt:stage, 'development'}
  region: us-east-1
  memorySize: 512
  timeout: 30
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "*"

        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "arn:aws:logs:${self:provider.region}:*:*"

        - Effect: Allow
          Action:
            - apigateway:*
            - route53:*
            - acm:ListCertificates
            - acm:DescribeCertificate
          Resource: "*"
      
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:us-east-1:*:table/*

plugins:
  - serverless-jetpack
  - serverless-offline
  - serverless-dotenv-plugin

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '!node_modules/aws-sdk/**'
    - '!test/**'
    - '!**/*.spec.ts'
    

functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY 
      - http:
          path: /
          method: ANY 

custom:
  dotenv:
    path: ./.env.${self:provider.stage}
  
  serverless-offline:
    port: 3000
    httpPort: 3000
    noAuth: true

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: User
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: isActive
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: UsernameIndex
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: CreatedAtIndex
            KeySchema:
              - AttributeName: createdAt
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ActiveByCreatedAt
            KeySchema:
              - AttributeName: isActive
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    FusedCharacterTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FusedCharacter
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: isActive
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: ActiveByCreatedAt
            KeySchema:
              - AttributeName: isActive
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    CustomTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Custom
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: isActive
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: ActiveByCreatedAt
            KeySchema:
              - AttributeName: isActive
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    
    CountersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Counters
        AttributeDefinitions:
          - AttributeName: entityName
            AttributeType: S
        KeySchema:
          - AttributeName: entityName
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
